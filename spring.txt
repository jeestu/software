1.Spring
Spring是一个开放源代码的设计层面框架，
它解决的是业务逻辑层和其他各层的松耦合问题，
因此它将面向接口的编程思想贯穿整个系统应用。
Spring是一个轻量级控制反转(IoC)和面向切面(AOP)的容器框架。
由Rod Johnson创建。
简单来说，
Spring是一个分层的JavaSE/EE full-stack(一站式) 轻量级开源框架。

2.IOC
控制反转（Inversion of Control，缩写为IoC），
是面向对象编程中的一种设计原则，
可以用来减低计算机代码之间的耦合度。
其中最常见的方式叫做依赖注入（Dependency Injection，简称DI），
还有一种方式叫“依赖查找”（Dependency Lookup）。
通过控制反转，对象在被创建的时候，
由一个调控系统内所有对象的外界实体，
将其所依赖的对象的引用传递给它。也可以说，依赖被注入到对象中。

技术描述：
Class A中用到了Class B的对象b，
一般情况下，需要在A的代码中显式的new一个B的对象。
采用依赖注入技术之后，
A的代码只需要定义一个私有的B对象，
不需要直接new来获得这个对象，
而是通过相关的容器控制程序来将B对象在外部new出来并注入到A类里的引用中。
而具体获取的方法、对象被获取时的状态由配置文件（如XML）来指定。

3.AOP
在软件业，AOP为Aspect Oriented Programming的缩写，
意为：面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。
AOP是OOP的延续，是软件开发中的一个热点，也是Spring框架中的一个重要内容，
是函数式编程的一种衍生范型。利用AOP可以对业务逻辑的各个部分进行隔离，
从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。

